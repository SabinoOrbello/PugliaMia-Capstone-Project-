@model List<PugliaMia.Models.Prodotti>

<div class="container-fluid bgChisiamo4">
    <div class="container hero">
        <div class="row pt-5">
            <div class="text-center lh-4">
                <h1 class="text-white fw-bold titShop dancing">Poesia Pugliese</h1>
            </div>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <div class="alert mess alert-warning" role="alert">
        @TempData["Message"]
    </div>
}
@if (Model.Any())
{
    using (Html.BeginForm("CreaOrdine", "Ordini", FormMethod.Post))
    {
        <div class="container py-4">
            <h2 class="mb-4">Il tuo Carrello</h2>
            <div class="row">
                <div class="col-lg-8">
                    <div class="table-responsive">
                        <!-- Aggiunto per rendere la tabella scrollabile su dispositivi mobili -->
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Immagine</th>
                                    <th>Nome</th>
                                    <th>Prezzo</th>
                                    <th>Ingredienti</th>
                                    <th>Quantità</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var prodotto in Model)
                                {
                                    <tr>
                                        <td><img src="@Url.Content(string.IsNullOrEmpty(prodotto.Immagine) ? "~/Content/Images/default-product-image.jpg" : prodotto.Immagine)" class="img-thumbnail w-50" alt="@prodotto.Nome"></td>
                                        <td>@prodotto.Nome</td>
                                        <td>@prodotto.Prezzo €</td>
                                        <td>@prodotto.Ingredienti</td>
                                        <td>
                                            <input type="number" name="quantita_@prodotto.ProdottoID" id="quantita_@prodotto.ProdottoID" min="1" value="1" class="form-control quantita-prodotto" data-peso="@prodotto.Peso" data-prezzo="@prodotto.Prezzo" data-costo-spedizione="@ViewBag.CostoSpedizione">
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-danger" onclick="rimuoviProdotto(@prodotto.ProdottoID)">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-lg-4 login-form text-center">
                    <div class="row mt-4">
                        <div class="col-md-12">
                            <h4>SubTotale:</h4>
                            <h4><span id="totaleSpesa"> €</span></h4>
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-md-12">
                            <h4>Costo di Spedizione:</h4>
                            <h4><span id="costoSpedizione"> €</span></h4>
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-md-12">
                            <h4>Totale:</h4>
                            <h4><span id="totaleSpesaSpedizione"> €</span></h4>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-md-6 my-2">
                    <button type="button" class="bottone1 btn-block" onclick="mostraForm()">Procedi con l'Acquisto</button>
                </div>
                <div class="col-md-6">
                    @Html.ActionLink("Continua gli Acquisti", "Index", "Categorie", null, new { @class = "bottone1" })
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-md-6">
                    <div class="row mt-4 login-form" id="formSpedizione" style="display: none;">
                        <div class="col-md-12">
                            <h3>Dati Spedizione</h3>
                            <hr class="border border-danger border-2 opacity-50 mb-4" />
                            <div class="mb-3">
                                <label for="indirizzoSpedizione" class="form-label">Indirizzo</label>
                                <input type="text" class="form-control" id="indirizzoSpedizione" name="indirizzoSpedizione" required>
                            </div>
                            <div class="mb-3">
                                <label for="citta" class="form-label">Città</label>
                                <input type="text" class="form-control" id="citta" name="citta" required>
                            </div>
                            <div class="mb-3">
                                <label for="regione" class="form-label">Regione</label>
                                <input type="text" class="form-control" id="regione" name="regione" required>
                            </div>
                            <div class="mb-3">
                                <label for="provincia" class="form-label">Provincia</label>
                                <input type="text" class="form-control" id="provincia" name="provincia" required>
                            </div>
                            <div class="mb-3">
                                <label for="corriere" class="form-label">Corriere</label>
                                <select class="form-select" id="corriere" name="corriere" required>
                                    <option value="">Seleziona un Corriere</option>
                                    <option value="Fedex">Fedex</option>
                                    <option value="SDA">SDA</option>
                                    <option value="GLS">GLS</option>
                                    <option value="DHL">DHL</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row mt-4 login-form" id="formFatturazione" style="display: none;">
                        <div class="col-md-12">
                            <h3>Dati Fatturazione</h3>
                            <hr class="border border-danger border-2 opacity-50 mb-4" />
                            <div class="mb-3">
                                <label class="form-label">Metodo di Pagamento:</label>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="metodoPagamento" id="metodoPagamentoCarta" value="carta" checked>
                                    <label class="form-check-label" for="metodoPagamentoCarta">Carta di Credito</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="metodoPagamento" id="metodoPagamentoPaypal" value="paypal">
                                    <label class="form-check-label" for="metodoPagamentoPaypal">PayPal</label>
                                </div>
                            </div>
                            <div id="card-element" class="py-3 mb-5">
                                <!-- L'elemento della carta Stripe sarà inserito qui -->
                            </div>
                            <button id="confermaOrdineBtn" type="button" class="bottone1 btn-block mt-5">Conferma Ordine</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}
else
{
    <div class="container py-4">
        <div class="alert alert-info" role="alert">
            Il tuo carrello è vuoto. <a href="@Url.Action("Index", "Categorie")" class="alert-link">Continua gli Acquisti</a>.
        </div>
    </div>
}
@if (ViewBag.ProdottiCorrelati != null && ViewBag.ProdottiCorrelati.Count > 0)
{
    <div class="container py-2">
        <h2 class="titPage">Prodotti Correlati</h2>
        <hr class="border border-danger border-2 opacity-50 mb-4" />
        <div class="row">
            @foreach (var prodotto in ViewBag.ProdottiCorrelati)
            {
                <div class="col-lg-2 col-md-4 col-sm-6">
                    <!-- Aggiunto per rendere le card dei prodotti responsive -->
                    <a href="@Url.Action("Details", "Prodotti", new { id = prodotto.ProdottoID })" class="text-decoration-none text-dark">
                        <div class="card h-100">
                            <img src="@Url.Content(string.IsNullOrEmpty(prodotto.Immagine) ? "~/Content/Images/default-product-image.jpg" : prodotto.Immagine)" class="card-img-top" alt="@prodotto.Nome">
                            <div class="card-body">
                                <h5 class="card-title">@prodotto.Nome</h5>
                                <p class="card-text">@prodotto.Prezzo €</p>
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>
    </div>
}



<script src="https://js.stripe.com/v3/"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>

<script>

    function nascondiMessaggio() {
        setTimeout(function () {
            $('.mess').fadeOut('slow'); // Nasconde gradualmente il messaggio
        }, 3000); // Nasconde il messaggio dopo 3 secondi (3000 millisecondi)
    }

    // Chiamata alla funzione per nascondere il messaggio quando la pagina è pronta
    $(document).ready(function () {
        nascondiMessaggio();
        calcolaEAggiornaTotali(); // Calcola il costo di spedizione e aggiorna i totali quando la pagina è pronta
    });

    // Chiamata alla funzione per calcolare il costo di spedizione e aggiornare i totali
    function calcolaEAggiornaTotali() {
        calcolaCostoSpedizione();
        aggiornaTotaleSpesa();
        aggiornaTotaleSpesaSpedizione();
    }

    // Funzione per calcolare il costo di spedizione
    function calcolaCostoSpedizione() {
        // Calcola il peso totale del carrello
        var pesoTotale = 0;
        $('.quantita-prodotto').each(function () {
            var quantita = parseInt($(this).val());
            var peso = parseFloat($(this).data('peso'));
            pesoTotale += quantita * peso;
        });

        // Fai una richiesta AJAX per calcolare il costo di spedizione
        $.post('@Url.Action("CalcolaCostoSpedizioneInterno", "Carrello")', { pesoTotale: pesoTotale }, function(data) {
            // Aggiorna il costo di spedizione visualizzato
            $('#costoSpedizione').text(data + ' €');
            // Aggiorna i totali dopo aver ottenuto il costo di spedizione
            aggiornaTotaleSpesa();
            aggiornaTotaleSpesaSpedizione();
        });
    }

    // Funzione per aggiornare il totale della spesa
    function aggiornaTotaleSpesa() {
        var totaleSpesa = 0;
        $('.quantita-prodotto').each(function () {
            var quantita = parseInt($(this).val());
            var prezzo = parseFloat($(this).data('prezzo'));
            totaleSpesa += quantita * prezzo;
        });
        // Aggiorna il totale della spesa visualizzato
        $('#totaleSpesa').text(totaleSpesa.toFixed(2) + ' €');
    }

    // Funzione per aggiornare il totale della spesa includendo il costo di spedizione
    function aggiornaTotaleSpesaSpedizione() {
        var costoSpedizione = parseFloat($('#costoSpedizione').text().replace(' €', ''));
        var totaleSpesa = parseFloat($('#totaleSpesa').text().replace(' €', ''));
        $('#totaleSpesaSpedizione').text((totaleSpesa + costoSpedizione).toFixed(2) + ' €');
    }

    // Chiamate alle funzioni di calcolo quando si cambia la quantità di un prodotto
    $('.quantita-prodotto').on('change', calcolaEAggiornaTotali);

    // Inizializza Stripe con la tua chiave pubblica
    var stripe = Stripe('pk_test_51P3eZiCzdPBqLcmGk82gXFVY9jj8AbIxB1DOjsxNv8ljuaVbJmmQE50awCqX3NubkbXfqWZjdNipltSxJGC9Tcet00fZB6ogt9');

    // Crea un elemento di carta
    var elements = stripe.elements();
    var card = elements.create('card');
    card.mount('#card-element');

    // Aggiungi un gestore di eventi al form per gestire il pagamento tramite Stripe
    document.getElementById('confermaOrdineBtn').addEventListener('click', function (event) {
        event.preventDefault(); // Previeni l'invio del form

        stripe.createPaymentMethod({
            type: 'card',
            card: card,
        }).then(function (result) {
            if (result.error) {
                // Mostra l'errore all'utente
                console.log(result.error.message);
            } else {
                // Crea un campo nascosto per l'ID del metodo di pagamento
                var paymentMethodIdField = document.createElement('input');
                paymentMethodIdField.setAttribute('type', 'hidden');
                paymentMethodIdField.setAttribute('name', 'paymentMethodId');
                paymentMethodIdField.setAttribute('value', result.paymentMethod.id);

                // Aggiungi il campo nascosto al form
                var form = document.querySelector('form');
                form.appendChild(paymentMethodIdField);

                // Invia il form
                form.submit();
            }
        });
    });

    function mostraForm() {
        document.getElementById("formSpedizione").style.display = "block";
        document.getElementById("formFatturazione").style.display = "block";
    }

    // Funzione per rimuovere un prodotto dal carrello
    function rimuoviProdotto(prodottoId) {
        // Fai una richiesta AJAX per rimuovere il prodotto dal carrello
        $.ajax({
            url: '@Url.Action("Rimuovi", "Carrello")',
            type: 'POST',
            data: { prodottoId: prodottoId },
            success: function (response) {
                // Se la rimozione è avvenuta con successo, aggiorna la pagina del carrello
                location.reload();
            },
            error: function (xhr, status, error) {
                // Se si verifica un errore durante la rimozione, visualizza un messaggio di errore
                console.error(error);
                alert('Si è verificato un errore durante la rimozione del prodotto dal carrello.');
            }
        });
    }

    // Controllo del formato della data di scadenza della carta
    document.getElementById("dataScadenzaCarta").addEventListener("blur", function () {
        var inputDate = this.value;
        var pattern = /^(0[1-9]|1[0-2])\/\d{2}$/; // Formato MM/AA
        if (!pattern.test(inputDate)) {
            alert("Formato data non valido. Inserisci la data nel formato MM/AA.");
            this.value = ""; // Cancella il campo
        }
    });

</script>
