﻿@model PugliaMia.Models.Utenti

@{
    ViewBag.Title = "Login";
}

<div class="container-fluid bgChisiamo9">
    <div class="container hero">
        <div class="row pt-5">
            <div class="text-center lh-4">
                <h1 class="text-white fw-bold titShop dancing">Un mare di sapori</h1>
            </div>
        </div>
    </div>
</div>

<div class="container text-center py-4">
    <h2 class="titPage">Effettua il Login</h2>
    <hr class="border border-danger border-2 opacity-50 mb-4" />

    @using (Html.BeginForm("Login", "Utenti", FormMethod.Post, new { id = "loginForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="login-form my-2">
            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control mx-auto", placeholder = "Nome" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control mx-auto", placeholder = "Email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control mx-auto password-toggle", placeholder = "Password", type = "password" } })
                    <div class="input-group-append">

                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary btn-block">Login</button>
            </div>
        </div>

    }
    <div>
        <p>
            Non sei Registrato? <br />
            Crea il tuo Account @Html.ActionLink("qui", "Register", "Utenti")
        </p>
    </div>

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function togglePasswordVisibility(icon) {
        var passwordInput = icon.parentElement.parentElement.querySelector(".password-toggle");

        if (passwordInput.type === "password") {
            passwordInput.type = "text";
            icon.innerHTML = '<i class="fa fa-eye-slash" aria-hidden="true"></i>';
        } else {
            passwordInput.type = "password";
            icon.innerHTML = '<i class="fa fa-eye" aria-hidden="true"></i>';
        }
    }

    $(document).ready(function () {
        $('#loginForm').submit(function (event) {
            event.preventDefault(); // Previeni il comportamento di default del form

            $.ajax({
                url: $(this).attr('action'),
                type: $(this).attr('method'),
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        // Mostra il messaggio di benvenuto utilizzando SweetAlert
                        Swal.fire({
                            icon: 'success',
                            title: 'Benvenuto!',
                            text: response.message
                        }).then(function () {
                            // Reindirizza l'utente alla pagina principale dopo aver chiuso l'alert
                            window.location.href = '/Home/Index';
                        });
                    } else {
                        // Se l'autenticazione non ha avuto successo, mostra un messaggio di errore
                        Swal.fire({
                            icon: 'error',
                            title: 'Errore!',
                            text: response.message
                        });
                    }
                },
                error: function () {
                    // In caso di errore nella richiesta AJAX, mostra un messaggio di errore generico
                    Swal.fire({
                        icon: 'error',
                        title: 'Errore!',
                        text: 'Si è verificato un errore durante il tentativo di login. Si prega di riprovare.'
                    });
                }
            });
        });
    });

</script>